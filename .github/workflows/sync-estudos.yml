name: Sync and Process Posts

on:
  push:
    branches: [ "main" ]
  schedule: 
    - cron: '0 0 * * *' # Daily Sync at 00:00 UTC

jobs:
  sync:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout Hugo Repo
        uses: actions/checkout@v4
        with:
          repository: lfelipeee/blog
          token: ${{ secrets.ACCESS_TOKEN }}
          fetch-depth: 0

      - name: Checkout Estudos Repo
        uses: actions/checkout@v4
        with:
          repository: lfelipeee/estudos
          token: ${{ secrets.ACCESS_TOKEN }}
          path: estudos

      - name: Process Markdown Files
        run: |
          mkdir -p content/posts/
          cd estudos

          for file in *.md; do
            title=$(basename "$file" .md)
            tags=$(grep -oP '^#\w+' "$file" | sed 's/#//g' | sed 's/^/"/;s/$/"/' | paste -sd ", " -)
            draft=$(grep -q '#draft' "$file" && echo "true" || echo "false")

            # Remove linhas com #tags do corpo
            sed -i '/^#\w\+/d' "$file"

            # Usa a data do último commit daquele arquivo no repo 'estudos'
            commit_date=$(git log -1 --format="%cI" -- "$file")

            # Gera front matter
            front_matter=$(printf "---\ntitle: \"%s\"\ndate: %s\ntags:[%s]\ndraft: %s\n---\n" \
              "$title" \
              "$commit_date" \
              "$tags" \
              "$draft")

            # Salva o arquivo com front matter no repositório Hugo
            echo "$front_matter" > "../content/posts/$file"
            cat "$file" >> "../content/posts/$file"
          done

      - name: Commit and Push
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add content/posts/
          git diff --quiet || git commit -m "Sync posts [$(date +'%d-%m-%Y')]"
          git push
